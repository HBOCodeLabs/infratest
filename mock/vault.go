// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/hbocodelabs/infratest/pkg/vault (interfaces: LogicalClient)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/vault/api"
)

// MockLogicalClient is a mock of LogicalClient interface.
type MockLogicalClient struct {
	ctrl     *gomock.Controller
	recorder *MockLogicalClientMockRecorder
}

// MockLogicalClientMockRecorder is the mock recorder for MockLogicalClient.
type MockLogicalClientMockRecorder struct {
	mock *MockLogicalClient
}

// NewMockLogicalClient creates a new mock instance.
func NewMockLogicalClient(ctrl *gomock.Controller) *MockLogicalClient {
	mock := &MockLogicalClient{ctrl: ctrl}
	mock.recorder = &MockLogicalClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogicalClient) EXPECT() *MockLogicalClientMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockLogicalClient) Delete(arg0 string) (*api.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(*api.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockLogicalClientMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockLogicalClient)(nil).Delete), arg0)
}

// Read mocks base method.
func (m *MockLogicalClient) Read(arg0 string) (*api.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", arg0)
	ret0, _ := ret[0].(*api.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockLogicalClientMockRecorder) Read(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockLogicalClient)(nil).Read), arg0)
}
